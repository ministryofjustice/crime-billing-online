= form_for(claim, url: case_workers_claim_path(claim), as: :claim, builder: GOVUKDesignSystemFormBuilder::FormBuilder) do |f|
  = hidden_field_tag :messages, 'true'
  .fx-assesment-hook
    #claim-status
      %h2#radio-control-heading.govuk-heading-l{ 'aria-describedby': 'radio-control-heading radio-control-legend' }
        = t('.assessment_summary')


      - if current_user_is_caseworker?
        .js-cw-claim-action
          = f.govuk_collection_radio_buttons :state,
            claim.valid_transitions_for_detail_form,
            :first,
            :last,
            inline: true,
            legend: { text: t('.update_the_claim_status') }
          %div
            = validation_error_message(@error_presenter, :determinations)

      = govuk_table( id: 'determinations', class: 'js-cw-claim-assessment', data: { apply_vat: "#{claim.apply_vat}", vat_url: vat_path(format: :json), submitted_date: claim.vat_date(:db), scheme: claim.agfs? ? 'agfs' : 'lgfs' }) do
        = govuk_table_caption(class: 'govuk-visually-hidden') do
          %h3.govuk-heading-m
            = t('.assessment_summary')

        = govuk_table_thead do
          = govuk_table_row do
            = govuk_table_th do
              = t('shared.description')

            = govuk_table_th_numeric do
              = t('shared.determinations_table.claimed_by', type: claim.external_user_description)

            = govuk_table_th_numeric do
              = t('shared.determinations_table.laa_heading')
              - if claim.opened_for_redetermination?
                .govuk-hint= t('.laa_heading_hint')

        = govuk_table_tbody do
          // CASEWORKER
          - if current_user_is_caseworker? && @claim.enable_assessment_input?
            // ASSESSMENT INPUT
            = f.fields_for :assessment do |af|
              = render partial: 'case_workers/claims/determination_fields', locals: { f: af, claim: claim }

          - elsif current_user_is_caseworker? && @claim.enable_determination_input?
            // DETERMINATION INPUT
            = f.fields_for :redeterminations, claim.redeterminations.build do |rf|
              = render partial: 'case_workers/claims/determination_fields', locals: { f: rf, claim: claim }

          - elsif claim.redeterminations.any?
            // REDETERMINATION
            = render partial: 'shared/determination_amounts', locals: { claim: claim, determination: claim.redeterminations.last }

          - else
            // ELSE
            = render partial: 'shared/determination_amounts', locals: { claim: claim, determination: claim.assessment }

    // CASE WORKER ACTIONS
    - if current_user_is_caseworker?
      .js-cw-claim-rejection-reasons.hidden{ class: error_class(@error_presenter, :rejected_reason) }
        %fieldset.form-group.nested-fields.indent-fieldset.spacer{ 'aria-describedby': 'checkbox-control-legend-1' }
          %div
            = validation_error_message(@error_presenter, :rejected_reason)
          %a#rejected_reason
          %legend#checkbox-control-legend-1.bold-normal.form-label
            = t('.reason_for_rejection')
          = collection_check_boxes(nil, :state_reason, ClaimStateTransitionReason.reject_reasons_for(@claim), :code, :description) do |b|
            .multiple-choice
              = b.check_box(checked: params[:state_reason].present? && params[:state_reason].include?(b.value), 'aria-labelledby': "checkbox-control-legend-1 #{b.text.to_css_class}")
              = b.label { b.text }

          .form-group.panel.nested-fields.fieldset.spacer.js-reject-reason-text.hidden{ class: error_class(@error_presenter, :rejected_reason_other) }
            %div
              %a#rejected_reason_other
              = f.label :reject_reason_text, class: 'form-label' do
                = t('.reason_text')
                .form-hint.xsmall
                  = t('.reason_hint')
              = f.text_field :reject_reason_text, class: 'form-control'
              %div
                = validation_error_message(@error_presenter, :rejected_reason_other)

      %a#refused_reason
      %div
        = validation_error_message(@error_presenter, :refused_reason)
      = f.govuk_check_boxes_fieldset :refuse_reason_text, legend: { text: t('reason_for_refusal') } do
        - ClaimStateTransitionReason.refuse_reasons_for(@claim).each do |reason|
          - if reason.code == 'other_refuse'
            = f.govuk_check_box :refuse_reason_text,
              reason.code,
              label: { text: reason.description } do
              %a#refused_reason_other
              = f.govuk_text_field :refuse_reason_text,
                  label: { text: t('.reason_text') },
                  hint: { text: t('.reason_hint') }
              %div
                = validation_error_message(@error_presenter, :refused_reason_other)
          - else
            = f.govuk_check_box :refuse_reason_text,
              reason.code,
              label: { text: reason.description }


      %p
        = govuk_button(t('.update'), id: 'button')
